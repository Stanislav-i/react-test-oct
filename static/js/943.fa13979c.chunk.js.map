{"version":3,"file":"static/js/943.fa13979c.chunk.js","mappings":"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","sources":["components/Rows/BasicRow.jsx","components/Rows/CustomRow.jsx","Pages/ContentPage/ContentPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst BasicRow = ({\n  id,\n  name,\n  birthday_date,\n  address,\n  email,\n  phone_number,\n  handleEditBtnClick,\n}) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{birthday_date}</td>\n      <td>{address}</td>\n      <td>{email}</td>\n      <td>{phone_number}</td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={event =>\n            handleEditBtnClick(\n              event,\n              id,\n              name,\n              birthday_date,\n              address,\n              email,\n              phone_number\n            )\n          }\n          style={{\n            padding: '5px 10px',\n            backgroundColor: 'rgb(218, 118, 229)',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Edit\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default BasicRow;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectEditData } from 'redux/editDataReducer';\n\nconst CustomRow = ({ id, handleCancelClick }) => {\n  const { name, birthday_date, address, email, phone_number } =\n    useSelector(selectEditData);\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter new name...\"\n          defaultValue={name}\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name=\"birthday\"\n          placeholder=\"Enter new birthday...\"\n          defaultValue={birthday_date}\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Enter new address...\"\n          defaultValue={address}\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name=\"phone\"\n          placeholder=\"Enter new phone number...\"\n          defaultValue={phone_number}\n        />\n      </td>\n      <td>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter new email...\"\n          defaultValue={email}\n        />\n      </td>\n      <td>\n        <button\n          type=\"submit\"\n          style={{\n            padding: '1px 10px',\n            backgroundColor: 'rgb(218, 118, 229)',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            marginBottom: '2px',\n          }}\n        >\n          Edit\n        </button>\n        <button\n          type=\"button\"\n          style={{\n            padding: '1px 10px',\n            backgroundColor: 'rgb(218, 118, 229)',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n          onClick={handleCancelClick}\n        >\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default CustomRow;\n","import BasicRow from 'components/Rows/BasicRow';\nimport CustomRow from 'components/Rows/CustomRow';\n// import { nanoid } from 'nanoid';\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/authReducer';\nimport {\n  nextPage,\n  previousPage,\n  requestDataThunk,\n  selectDataOffset,\n  selectUserData,\n} from 'redux/dataReducer';\nimport { selectEditDataId, setEditData, setId } from 'redux/editDataReducer';\n\nexport const ContentPage = () => {\n  const userData = useSelector(selectUserData);\n  const editDataId = useSelector(selectEditDataId);\n  const dispatch = useDispatch();\n  const offset = useSelector(selectDataOffset);\n\n  useEffect(() => {\n    dispatch(requestDataThunk(offset));\n  }, [dispatch, offset]);\n\n  useEffect(() => {\n    if (userData) return;\n    dispatch(requestDataThunk(offset));\n  }, [userData, dispatch, offset]);\n  // console.log(userData?.results);\n\n  const handleEditBtnClick = (\n    e,\n    id,\n    name,\n    birthday_date,\n    address,\n    email,\n    phone_number\n  ) => {\n    e.preventDefault();\n    dispatch(setId(id));\n    dispatch(\n      setEditData({\n        id,\n        name,\n        birthday_date,\n        address,\n        email,\n        phone_number,\n      })\n    );\n  };\n\n  const handleLeftArrowClick = () => {\n    dispatch(previousPage());\n  };\n\n  const handleRightArrowClick = () => {\n    dispatch(nextPage());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newName = form.elements.name.value;\n    const newBirthday = form.elements.birthday.value;\n    const newAddress = form.elements.address.value;\n    const newEmail = form.elements.email.value;\n    const newPhone = form.elements.phone.value;\n    console.log({\n      name: newName,\n      birthday: newBirthday,\n      address: newAddress,\n      email: newEmail,\n      phone: newPhone,\n    });\n    dispatch(setId(null));\n\n    // dispatch(setEditData)\n  };\n\n  const handleCancelClick = e => {\n    dispatch(setId(null));\n  };\n\n  const handleLogout = () => {\n    dispatch(logOut());\n  };\n\n  // ======Додаткова функція на створення даних\n\n  // const handleAddingaDataSubmit = (e)=> {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   const newName = form.elements.newDataName.value;\n  //   const newBirthday = form.elements.newDataBirthday.value;\n  //   const newAddress = form.elements.newDataAddress.value;\n  //   const newEmail = form.elements.newDataEmail.value;\n  //   const newPhone = form.elements.newDataPhone.value;\n  //   console.log({\n  //     name: newName,\n  //     birthday: newBirthday,\n  //     address: newAddress,\n  //     email: newEmail,\n  //     phone: newPhone,\n  //   });\n  // }\n\n  const showTable =\n    Array.isArray(userData?.results) && userData?.results.length > 0;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'Column',\n        gap: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {showTable && (\n        <form onSubmit={handleSubmit}>\n          <table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Birthday</th>\n                <th>Address</th>\n                <th>Phone Number</th>\n                <th>Email</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {userData.results.map(\n                ({ id, name, birthday_date, address, email, phone_number }) => (\n                  <Fragment key={id}>\n                    {editDataId !== id ? (\n                      <BasicRow\n                        id={id}\n                        name={name}\n                        birthday_date={birthday_date}\n                        address={address}\n                        email={email}\n                        phone_number={phone_number}\n                        handleEditBtnClick={handleEditBtnClick}\n                      />\n                    ) : (\n                      <CustomRow\n                        id={id}\n                        handleCancelClick={handleCancelClick}\n                      />\n                    )}\n                  </Fragment>\n                )\n              )}\n            </tbody>\n          </table>\n        </form>\n      )}\n\n      <div\n        style={{\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <button\n          type=\"button\"\n          onClick={handleLeftArrowClick}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: 'rgb(218, 118, 229)',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          &#60;\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleRightArrowClick}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: 'rgb(218, 118, 229)',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          &#62;\n        </button>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={handleLogout}\n        style={{\n          padding: '5px 20px',\n          backgroundColor: 'rgb(218, 118, 229)',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Logout\n      </button>\n      {/* ======Додатковий елемент для створення даних */}\n      {/* <h2>Add data</h2>\n      <form onSubmit={handleAddingaDataSubmit}>\n        <input type=\"text\" name='newDataName' required='required' placeholder='Enter a name...'/>\n        <input type=\"text\" name='newDataBirthday' placeholder='Enter birthday...'/>\n        <input type=\"text\" name='newDataAddress' placeholder='Enter address...'/>\n        <input type=\"phone\" name='newDataPhone' placeholder='Enter phone number...'/>\n        <input type=\"email\" name='newDataEmail' placeholder='Enter email...'/>\n        <button type='submit'>Add data</button>\n      </form> */}\n    </div>\n  );\n};\n\nexport default ContentPage;\n"],"names":["id","name","birthday_date","address","email","phone_number","handleEditBtnClick","type","onClick","event","style","padding","backgroundColor","borderRadius","cursor","handleCancelClick","useSelector","selectEditData","placeholder","defaultValue","marginBottom","ContentPage","userData","selectUserData","editDataId","selectEditDataId","dispatch","useDispatch","offset","selectDataOffset","useEffect","requestDataThunk","e","preventDefault","setId","setEditData","showTable","Array","isArray","results","length","display","flexDirection","gap","justifyContent","alignItems","onSubmit","form","currentTarget","newName","elements","value","newBirthday","birthday","newAddress","newEmail","newPhone","phone","console","log","map","Fragment","previousPage","nextPage","logOut"],"sourceRoot":""}